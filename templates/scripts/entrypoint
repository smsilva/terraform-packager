#!/bin/sh
export TERRAFORM_COMMAND="$1"
shift
export TERRAFORM_OUTPUT_DIRECTORY="/opt/output"
export TERRAFORM_PLAN_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan"
export TERRAFORM_PLAN_JSON_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan.json"
export TERRAFORM_PLAN_TXT_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan.txt"
export PATH=/opt/scripts/:${PATH}

for i in "$@"; do
  case $i in
    -args=*)
      extraArgs="${extraArgs} ${i#*=}"
      shift
      ;;
    *)
      terraformDefaultArgs="${terraformDefaultArgs} ${i}"
      ;;
  esac
done

if [ "${TERRAFORM_COMMAND}" == "info" ]; then
  echo ""
  cat /opt/src/manifest.yaml
  echo ""
  exit $?
fi

if [ "${TERRAFORM_COMMAND}" == "help" ]; then
  show_help
  exit 0
fi

if [ -n "${STACK_INSTANCE_NAME_FINAL}" ]; then
  STACK_INSTANCE_NAME="${STACK_INSTANCE_NAME_FINAL}"
fi

if [ "${TERRAFORM_COMMAND}" == "plan-no-color" ]; then
  export TF_CLI_ARGS_init="-no-color"
fi

if echo "${terraformDefaultArgs}" | grep -q -- "\-no\-color"; then
  export TF_CLI_ARGS_init="-no-color"
fi

if echo "${extraArgs}" | grep -q -- "\-no\-color"; then
  export TF_CLI_ARGS_init="-no-color"
fi

. terraform_init

if [ "${TERRAFORM_COMMAND}" == "plan-no-color" ]; then
  terraform_plan_no_color ${extraArgs}
  exit $?
fi

if [ -z "${terraformDefaultArgs}" ]; then
  if [ "${TERRAFORM_COMMAND}" == "plan" ] || [ -z "${TERRAFORM_COMMAND}" ]; then
    terraform_plan_with_output_file ${extraArgs}
    exit $?
  fi

  if [ "${TERRAFORM_COMMAND}" == "apply" ]; then
    terraform_apply_with_auto_approve ${extraArgs}
    exit $?
  fi

  if [ "${TERRAFORM_COMMAND}" == "apply-refresh-only" ]; then
    terraform_apply_with_auto_approve_and_refresh_only ${extraArgs}
    exit $?
  fi
fi

if [ "${TERRAFORM_COMMAND}" == "destroy-twice" ]; then
  terraform_destroy_twice ${terraformDefaultArgs}
  exit $?
fi

terraform ${TERRAFORM_COMMAND} ${terraformDefaultArgs}
