#!/bin/bash
export TERRAFORM_COMMAND="$1"
shift
export TERRAFORM_OUTPUT_DIRECTORY="/opt/output"
export TERRAFORM_OUTPUT_JSON_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.output.json"
export TERRAFORM_PLAN_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan"
export TERRAFORM_PLAN_JSON_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan.json"
export TERRAFORM_PLAN_TXT_FILE="${TERRAFORM_OUTPUT_DIRECTORY}/terraform.plan.txt"
export PATH=/opt/scripts/:${PATH}

for i in "$@"; do
  case $i in
    -args=*)
      extraArgs="${extraArgs} ${i#*=}"
      shift
      ;;
    *)
      terraformDefaultArgs="${terraformDefaultArgs} ${i}"
      ;;
  esac
done

if [ "${TERRAFORM_COMMAND}" == "info" ]; then
  echo ""
  cat /opt/src/manifest.yaml
  echo ""
  exit $?
fi

if [ "${TERRAFORM_COMMAND}" == "help" ]; then
  show_help
  exit 0
fi

if [ -n "${STACK_INSTANCE_NAME_FINAL}" ]; then
  STACK_INSTANCE_NAME="${STACK_INSTANCE_NAME_FINAL}"
fi

if [ "${TERRAFORM_COMMAND}" == "plan-no-color" ]; then
  export TF_CLI_ARGS_init="-no-color"
else
  if echo "${terraformDefaultArgs}${extraArgs}" | grep -q -- "\-no\-color"; then
    export TF_CLI_ARGS_init="-no-color"
  fi
fi

. runtime_extra before all

. runtime_extra before init
. terraform_init
. runtime_extra after init

TERRAFORM_COMMAND_NAME=$(terraform_command_name "${TERRAFORM_COMMAND} ${terraformDefaultArgs}")

if [ "${TERRAFORM_COMMAND}" == "plan-no-color" ]; then
  . runtime_extra before plan
  terraform_plan_no_color ${extraArgs}
  RESULT=$?
  . runtime_extra after plan
  exit ${RESULT}
fi

if [ -z "${terraformDefaultArgs}" ]; then
  if [ "${TERRAFORM_COMMAND}" == "plan" ] || [ -z "${TERRAFORM_COMMAND}" ]; then
    . runtime_extra before ${TERRAFORM_COMMAND_NAME}
    terraform_plan_with_output_file ${extraArgs}
    RESULT=$?
    . runtime_extra after ${TERRAFORM_COMMAND_NAME}
    exit ${RESULT}
  fi

  if [ "${TERRAFORM_COMMAND}" == "apply" ]; then
    . runtime_extra before ${TERRAFORM_COMMAND_NAME}
    terraform_apply_with_auto_approve ${extraArgs}
    RESULT=$?
    . runtime_extra after ${TERRAFORM_COMMAND_NAME}
    exit ${RESULT}
  fi

  if [ "${TERRAFORM_COMMAND}" == "apply-refresh-only" ]; then
    . runtime_extra after before-refresh-only
    terraform_apply_with_auto_approve_and_refresh_only ${extraArgs}
    RESULT=$?
    . runtime_extra after apply-refresh-only
    exit ${RESULT}
  fi
fi

if [ "${TERRAFORM_COMMAND}" == "destroy-twice" ]; then
  . runtime_extra before destroy
  terraform_destroy_twice ${terraformDefaultArgs}
  RESULT=$?
  . runtime_extra after destroy
  exit ${RESULT}
fi

. runtime_extra before ${TERRAFORM_COMMAND_NAME}
terraform ${TERRAFORM_COMMAND} ${terraformDefaultArgs}
RESULT=$?
. runtime_extra after ${TERRAFORM_COMMAND_NAME}
exit ${RESULT}
